{"version":3,"sources":["containers/NotFoundPage.js","containers/DetailedView.js","containers/AddApplicationForm.js","containers/AddVersionForm.js","components/Header.js","components/Layout.js","containers/ContextWrapper.js","containers/HomePage.js","containers/App.js","index.js"],"names":["NotFound","DetailedView","props","onAdd","history","push","match","params","guid","onDelete","id","filterList","state","appList","map","item","index","versions","version","indexOf","splice","setState","getAppDetails","filter","toLowerCase","includes","context","applications","appDetails","this","currentVersion","name","Paper","className","Grid","container","spacing","md","Table","TableHead","TableRow","TableCell","align","TableBody","row","component","scope","status","Date","versionDate","toISOString","split","Button","onClick","variant","React","PureComponent","withRouter","AddApplicationForm","handleChange","event","target","value","validateForm","appState","versionStatus","handleSubmit","preventDefault","Errors","newApp","appGuid","appName","appVersionGuid","appVersion","appVersionDate","updateAppList","lists","onSubmit","FormControl","required","InputLabel","htmlFor","Input","onChange","Select","inputProps","MenuItem","label","type","AddVersionForm","updateVersionList","newVersion","updatedList","versionName","Header","to","pathname","Layout","Container","fixed","children","ContextWrapper","MyContext","Consumer","mainComponent","Currentversion","versionList","length","HomePage","filteredList","searchText","list","placeholder","toString","createContext","data","App","Provider","basename","process","exact","path","render","NotFoundPage","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a794e752.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1>Page not found!</h1>\r\n    </div>\r\n  ); \r\n}\r\n","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass DetailedView extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      appList: props.context.applications,\r\n    };\r\n  }\r\n\r\n  onAdd = () => {\r\n    this.props.history.push(`/add-version/${this.props.match.params.guid}`);\r\n  };\r\n\r\n  onDelete = (id) => {\r\n    const list = this.state.appList;\r\n    const filterList = list.map((item) => {\r\n      const index = item.versions.map((version) => version.guid).indexOf(id);\r\n      if (index !== -1) item.versions.splice(index, 1);\r\n      return item;\r\n    });\r\n    this.setState({\r\n      appList: filterList,\r\n    });\r\n  };\r\n\r\n  getAppDetails = () => {\r\n    const app = this.state.appList.filter((item) =>\r\n      item.guid\r\n        ? item.guid.toLowerCase().includes(this.props.match.params.guid)\r\n        : false\r\n    );\r\n    return app[0]; // return single filtered element\r\n  };\r\n\r\n  render() {\r\n    const appDetails = this.getAppDetails();\r\n    const currentVersion =\r\n      appDetails.versions &&\r\n      appDetails.versions.map((item) => (item.currentVersion ? item.name : \"\"));\r\n    return (\r\n      <div>\r\n        <Paper className=\"top-bar\">\r\n          <Grid container spacing={1}>\r\n            <Grid item md={5}>\r\n              <strong>Application Name :</strong> {appDetails.name}\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <strong>Current version :</strong> {currentVersion}\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <strong>Application state :</strong> {appDetails.state}\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <Paper className=\"table-wrapper\">\r\n          <Table>\r\n            <TableHead className=\"table-head\">\r\n              <TableRow>\r\n                <TableCell className=\"table-cell\">Version Name</TableCell>\r\n                <TableCell className=\"table-cell\" align=\"center\">\r\n                  Version GUID\r\n                </TableCell>\r\n                <TableCell className=\"table-cell\" align=\"center\">\r\n                  Status\r\n                </TableCell>\r\n                <TableCell className=\"table-cell\" align=\"center\">\r\n                  Version Date\r\n                </TableCell>\r\n                <TableCell className=\"table-cell\" align=\"center\">\r\n                  Current Version\r\n                </TableCell>\r\n                <TableCell className=\"table-cell\" align=\"center\">\r\n                  Delete\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {appDetails.versions.map((row) => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell className=\"table-cell\" component=\"th\" scope=\"row\">\r\n                    {row.name}\r\n                    {row.currentVersion ? \"*\" : \"\"}\r\n                  </TableCell>\r\n                  <TableCell className=\"table-cell\" align=\"center\">\r\n                    {row.guid}\r\n                  </TableCell>\r\n                  <TableCell className=\"table-cell\" align=\"center\">\r\n                    {row.status}\r\n                  </TableCell>\r\n                  <TableCell className=\"table-cell\" align=\"center\">\r\n                    {new Date(row.versionDate).toISOString().split(\"T\")[0]}\r\n                  </TableCell>\r\n                  <TableCell className=\"table-cell\" align=\"center\">\r\n                    {row.currentVersion ? \"Yes\" : \"No\"}\r\n                  </TableCell>\r\n                  <TableCell className=\"table-cell\" align=\"center\">\r\n                    <Button onClick={() => this.onDelete(row.guid)}>\r\n                      <DeleteIcon />\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n        <div className=\"add-button\">\r\n          <Button variant=\"contained\" onClick={this.onAdd}>\r\n            Add version\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDetailedView.propTypes = {\r\n  context: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(DetailedView);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport PropTypes from 'prop-types';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport '../styles/AddApplicationForm.scss';\r\n\r\nclass AddApplicationForm extends React.PureComponent {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tappList: props.context.applications,\r\n\t\t\tappState: '',\r\n\t\t\tversionStatus: '',\r\n\t\t\tappName: '',\r\n\t\t\tappGuid: '',\r\n\t\t\tappVersion: '',\r\n\t\t\tappVersionGuid: '',\r\n\t\t\tappVersionDate: new Date(),\r\n\t\t\tErrors: false\r\n\t\t};\r\n\t}\r\n\thandleChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\t[event.target.name]: event.target.value\r\n\t\t});\r\n\t};\r\n\r\n\tvalidateForm = () => {\r\n\t\t// TODO: validate for all fields\r\n\t\tif (this.state.appState === '' || this.state.versionStatus === '') return false;\r\n\t\treturn true;\r\n\t};\r\n\r\n\thandleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (this.validateForm()) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tErrors: false\r\n\t\t\t});\r\n\t\t\tconst newApp = {\r\n\t\t\t\tguid: this.state.appGuid,\r\n\t\t\t\tname: this.state.appName,\r\n\t\t\t\tstate: this.state.appState,\r\n\t\t\t\tversions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcurrentVersion: true,\r\n\t\t\t\t\t\tguid: this.state.appVersionGuid,\r\n\t\t\t\t\t\tname: this.state.appVersion,\r\n\t\t\t\t\t\tstatus: this.state.versionStatus,\r\n\t\t\t\t\t\tversionDate: new Date(this.state.appVersionDate).toISOString()\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t};\r\n\r\n\t\t\tthis.updateAppList(newApp);\r\n\t\t\tthis.props.history.push('/');\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tErrors: true\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tupdateAppList = (newApp) => {\r\n\t\tlet lists = this.state.appList;\r\n\t\tlists.push(newApp);\r\n\t\tthis.setState({\r\n\t\t\tappList: lists\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<header className=\"form-header\">Application Form</header>\r\n\t\t\t\t<form onSubmit={(event) => this.handleSubmit(event)}>\r\n\t\t\t\t\t<FormControl required>\r\n\t\t\t\t\t\t<InputLabel htmlFor=\"app-name\">New Application name</InputLabel>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid=\"app-name\"\r\n\t\t\t\t\t\t\tname=\"appName\"\r\n\t\t\t\t\t\t\tvalue={this.state.appName}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t<FormControl required>\r\n\t\t\t\t\t\t<InputLabel htmlFor=\"app-id\">GUID</InputLabel>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid=\"app-id\"\r\n\t\t\t\t\t\t\tname=\"appGuid\"\r\n\t\t\t\t\t\t\tvalue={this.state.appGuid}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t<FormControl required>\r\n\t\t\t\t\t\t<InputLabel htmlFor=\"app-state\">State</InputLabel>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tvalue={this.state.appState}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\tname: 'appState',\r\n\t\t\t\t\t\t\t\tid: 'app-state'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuItem value=\"\">Select</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem value=\"analysis_ready\">Analysis Ready</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem value=\"analysis_succeed\">Analysis Succeed</MenuItem>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t<FormControl required>\r\n\t\t\t\t\t\t<InputLabel htmlFor=\"version-no\">Current Version name</InputLabel>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid=\"version-no\"\r\n\t\t\t\t\t\t\tname=\"appVersion\"\r\n\t\t\t\t\t\t\tvalue={this.state.appVersion}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t<FormControl required>\r\n\t\t\t\t\t\t<InputLabel htmlFor=\"version-id\">version GUID</InputLabel>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid=\"version-id\"\r\n\t\t\t\t\t\t\tname=\"appVersionGuid\"\r\n\t\t\t\t\t\t\tvalue={this.state.appVersionGuid}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t<FormControl required>\r\n\t\t\t\t\t\t<InputLabel htmlFor=\"version-date\" />\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid=\"version-date\"\r\n\t\t\t\t\t\t\tlabel=\"version Date\"\r\n\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\tname=\"appVersionDate\"\r\n\t\t\t\t\t\t\tvalue={new Date(this.state.appVersionDate).toISOString().split('T')[0]}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t<FormControl required>\r\n\t\t\t\t\t\t<InputLabel htmlFor=\"version-no\">version Status</InputLabel>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tvalue={this.state.versionStatus}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\tname: 'versionStatus',\r\n\t\t\t\t\t\t\t\tid: 'version-no'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuItem value=\"\">Select</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem value=\"accepted\">Accepted</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem value=\"delivered\">Delivered</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem value=\"opened\">Opened</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem value=\"purged\">Purged</MenuItem>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t<Button className=\"form-button\" variant=\"contained\" type=\"submit\" value=\"Submit\">\r\n\t\t\t\t\t\tAdd Application\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</form>\r\n\t\t\t\t{this.state.Errors && <footer className=\"form-footer\">Please select all the fields</footer>}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nAddApplicationForm.propTypes = {\r\n\tcontext: PropTypes.object.isRequired\r\n};\r\n\r\nexport default AddApplicationForm;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nclass AddVersionForm extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      appList: props.context.applications,\r\n      versionName: \"\",\r\n      appVersionGuid: \"\",\r\n      appVersionDate: new Date(),\r\n      versionStatus: \"\",\r\n      Errors: false,\r\n    };\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  validateForm = () => {\r\n    // TODO: validate for all fields\r\n    if (this.state.versionStatus === \"\") return false;\r\n    return true;\r\n  };\r\n\r\n  updateVersionList = (newVersion) => {\r\n    const list = this.state.appList;\r\n    const updatedList = list.map((item) => {\r\n      if (item.guid.includes(this.props.match.params.guid)) {\r\n        item.versions.map((version) => {\r\n          if (version.currentVersion) version.currentVersion = false;\r\n          return version;\r\n        });\r\n        item.versions.push(newVersion);\r\n      }\r\n      return item;\r\n    });\r\n    this.setState({\r\n      appList: updatedList,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.validateForm()) {\r\n      this.setState({\r\n        Errors: false,\r\n      });\r\n      const newVersion = {\r\n        currentVersion: true,\r\n        guid: this.state.appVersionGuid,\r\n        name: this.state.versionName,\r\n        status: this.state.versionStatus,\r\n        versionDate: new Date(this.state.appVersionDate).toISOString(),\r\n      };\r\n\r\n      this.updateVersionList(newVersion);\r\n      this.props.history.push(`/detailed-view/${this.props.match.params.guid}`);\r\n    } else {\r\n      this.setState({\r\n        Errors: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"form-header\">Version Form</header>\r\n        <form onSubmit={(event) => this.handleSubmit(event)}>\r\n          <FormControl required>\r\n            <InputLabel htmlFor=\"version-name\">New version name</InputLabel>\r\n            <Input\r\n              id=\"version-name\"\r\n              name=\"versionName\"\r\n              value={this.state.versionName}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n          </FormControl>\r\n          <FormControl required>\r\n            <InputLabel htmlFor=\"version-id\">version GUID</InputLabel>\r\n            <Input\r\n              id=\"version-id\"\r\n              name=\"appVersionGuid\"\r\n              value={this.state.appVersionGuid}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n          </FormControl>\r\n          <FormControl required>\r\n            <InputLabel htmlFor=\"version-date\" />\r\n            <Input\r\n              id=\"version-date\"\r\n              label=\"version Date\"\r\n              type=\"date\"\r\n              name=\"appVersionDate\"\r\n              value={\r\n                new Date(this.state.appVersionDate).toISOString().split(\"T\")[0]\r\n              }\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n          </FormControl>\r\n          <FormControl required>\r\n            <InputLabel htmlFor=\"version-no\">version Status</InputLabel>\r\n            <Select\r\n              value={this.state.versionStatus}\r\n              onChange={this.handleChange}\r\n              inputProps={{\r\n                name: \"versionStatus\",\r\n                id: \"version-no\",\r\n              }}\r\n              required\r\n            >\r\n              <MenuItem value=\"\">Select</MenuItem>\r\n              <MenuItem value=\"accepted\">Accepted</MenuItem>\r\n              <MenuItem value=\"delivered\">Delivered</MenuItem>\r\n              <MenuItem value=\"opened\">Opened</MenuItem>\r\n              <MenuItem value=\"purged\">Purged</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <Button\r\n            className=\"form-button\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n          >\r\n            Add version\r\n          </Button>\r\n        </form>\r\n        {this.state.Errors && <footer>Please select all the fields</footer>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddVersionForm.propTypes = {\r\n  context: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default AddVersionForm;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/Header.scss';\r\n\r\nconst Header = () => (\r\n\t<header className='main-header'>\r\n\t\t<h2>\r\n\t\t\t<Link className='link-wrapper' to={{ pathname: `/` }}>\r\n\t\t\t\tApplication Portfolio\r\n\t\t\t</Link>\r\n\t\t</h2>\r\n\t</header>\r\n);\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst Layout = (props) => (\r\n\t<div>\r\n\t\t<Header />\r\n\t\t<Container fixed>{props.children}</Container>\r\n\t</div>\r\n);\r\n\r\nexport default Layout;","import React from 'react';\r\nimport { MyContext } from './App';\r\nimport Layout from '../components/Layout';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContextWrapper = (props) => (\r\n\t<Layout>\r\n\t\t<MyContext.Consumer>{(context) => <props.mainComponent context={context} {...props} />}</MyContext.Consumer>\r\n\t</Layout>\r\n);\r\n\r\nContextWrapper.propTypes = {\r\n\tmainComponent: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContextWrapper;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ZoomIn from \"@material-ui/icons/ZoomIn\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport \"../styles/HomePage.scss\";\r\n\r\nconst Currentversion = ({ versionList }) => {\r\n  let currentVersion = \"\";\r\n  for (let index = 0; index < versionList.length; index++) {\r\n    if (versionList[index].currentVersion) {\r\n      currentVersion = (\r\n        <TableCell align=\"center\">{versionList[index].name}</TableCell>\r\n      );\r\n      break;\r\n    }\r\n  }\r\n  return (\r\n    currentVersion ||\r\n    (!currentVersion && <TableCell align=\"center\">Unavailable</TableCell>)\r\n  );\r\n};\r\n\r\nclass HomePage extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      appList: props.context.applications,\r\n      filteredList: {},\r\n      searchText: \"\",\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const filterList = this.state.appList.filter((item) =>\r\n      item.name ? item.name.toLowerCase().includes(event.target.value) : \"\"\r\n    );\r\n    this.setState({\r\n      filteredList: filterList,\r\n      searchText: event.target.value,\r\n    });\r\n  };\r\n\r\n  onAdd = () => {\r\n    this.props.history.push(\"/add-application\");\r\n  };\r\n\r\n  onDelete = (id) => {\r\n    const filterList = this.state.appList.filter((item) =>\r\n      item.guid ? !item.guid.includes(id) : false\r\n    );\r\n    this.setState({\r\n      appList: filterList,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const list =\r\n      (this.state.searchText !== \"\" && this.state.filteredList) ||\r\n      this.state.appList;\r\n    this.props.context.applications = this.state.appList;\r\n    return (\r\n      <div>\r\n        <div className=\"search-wrapper\">\r\n          <span>Hello, Welcome User!</span>\r\n          <div className=\"search-box\">\r\n            <SearchIcon className=\"searchIconWrapper\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search…\"\r\n              value={this.state.searchText}\r\n              onChange={(event) => this.handleChange(event)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Paper className=\"table-wrapper\">\r\n          <Table>\r\n            <TableHead className=\"table-head\">\r\n              <TableRow>\r\n                <TableCell className=\"table-cell\">Application Name</TableCell>\r\n                <TableCell align=\"center\" className=\"table-cell\">\r\n                  GUID\r\n                </TableCell>\r\n                <TableCell align=\"center\" className=\"table-cell\">\r\n                  State\r\n                </TableCell>\r\n                <TableCell align=\"center\" className=\"table-cell\">\r\n                  Total Versions\r\n                </TableCell>\r\n                <TableCell align=\"center\" className=\"table-cell\">\r\n                  Current Version\r\n                </TableCell>\r\n                <TableCell align=\"center\" className=\"table-cell\">Details</TableCell>\r\n                <TableCell align=\"center\" className=\"table-cell\">Delete</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {list.map((row) => (\r\n                <TableRow key={row.guid}>\r\n                  <TableCell component=\"th\" scope=\"row\" className=\"table-cell\">\r\n                    {row.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\" className=\"table-cell\">\r\n                    {row.guid}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\" className=\"table-cell\">\r\n                    {row.state.toString()}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\" className=\"table-cell\">\r\n                    {row.versions.length}\r\n                  </TableCell>\r\n                  <Currentversion versionList={row.versions} />\r\n                  <TableCell className=\"table-cell\" align=\"center\">\r\n                    <Link\r\n                      className=\"link-wrapper\"\r\n                      to={{ pathname: `/detailed-view/${row.guid}` }}\r\n                    >\r\n                      <ZoomIn />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell className=\"table-cell\" align=\"center\">\r\n                    <Button onClick={() => this.onDelete(row.guid)}>\r\n                      <DeleteIcon />\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          {this.state.searchText !== \"\" &&\r\n            this.state.filteredList.length === 0 && (\r\n              <div className=\"no-result-text\">0 search result</div>\r\n            )}\r\n        </Paper>\r\n        <div className=\"add-button\">\r\n          <Button variant=\"contained\" onClick={() => this.onAdd()}>\r\n            Add Application\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nHomePage.propTypes = {\r\n  context: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(HomePage);\r\n","import React, { createContext } from 'react';\r\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\r\nimport NotFoundPage from 'containers/NotFoundPage';\r\nimport DetailedView from 'containers/DetailedView';\r\nimport AddApplicationForm from 'containers/AddApplicationForm';\r\nimport AddVersionForm from 'containers/AddVersionForm';\r\nimport data from '../data';\r\nimport ContextWrapper from './ContextWrapper';\r\nimport HomePage from './HomePage';\r\nconst MyContext = createContext(data);\r\n\r\nconst App = () => {\r\n  const { applications } = data;\r\n  return (\r\n        <MyContext.Provider value={{ applications }}>\r\n          <Router basename={process.env.REACT_APP_PUBLIC_URL}>\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path=\"/\"\r\n                render={props => (\r\n                  <ContextWrapper mainComponent={HomePage} {...props} />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/detailed-view/:guid\"\r\n                render={props => (\r\n                  <ContextWrapper mainComponent={DetailedView} {...props} />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/add-application\"\r\n                render={props => (\r\n                  <ContextWrapper\r\n                    mainComponent={AddApplicationForm}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/add-version/:guid\"\r\n                render={props => (\r\n                  <ContextWrapper mainComponent={AddVersionForm} {...props} />\r\n                )}\r\n              />\r\n              <Route path=\"\" component={NotFoundPage} />\r\n            </Switch>\r\n          </Router>\r\n        </MyContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\nexport { MyContext };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.scss';\r\nimport App from 'containers/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}